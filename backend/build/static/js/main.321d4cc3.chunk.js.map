{"version":3,"sources":["components/ScoreBoard.js","components/TextInput.js","services/ScoreService.js","App.js","index.js"],"names":["ScoreBoard","props","className","title","TextInput","useState","textInputValue","setTextInputValue","scoreValue","setScoreValue","type","value","placeholder","scoreText","onChange","event","target","console","log","inputText","onClick","handleAdd","url","axios","get","scoreToBeSaved","post","App","scores","setScores","useEffect","ScoreService","then","response","data","map","score","key","id","name","concat","sort","a","b","catch","e","ReactDOM","render","document","getElementById"],"mappings":"sOASeA,G,KAPI,SAAAC,GACf,OACI,yBAAKC,UAAY,+BACb,yBAAKA,UAAY,mBAAmBD,EAAME,UCqBvCC,EAxBG,SAAAH,GAAU,IAAD,EACqBI,mBAAS,IAD9B,mBAChBC,EADgB,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAEhBG,EAFgB,KAEJC,EAFI,KAgBvB,OACI,yBAAKP,UAAY,+BACb,2BAAOQ,KAAK,OAAOC,MAAOH,EAAYI,YAAaX,EAAMY,UAAWC,SAX/C,SAAAC,GACzBN,EAAcM,EAAMC,OAAOL,OAC3BM,QAAQC,IAAIV,MAUR,2BAAOE,KAAK,OAAOC,MAAOL,EAAgBM,YAAaX,EAAMkB,UAAWL,SAhB/C,SAAAC,GAC7BR,EAAkBQ,EAAMC,OAAOL,OAC/BM,QAAQC,IAAIZ,MAeR,4BAAQc,QATE,WACdnB,EAAMoB,UAAUf,EAAgBE,GAChCD,EAAkB,IAClBE,EAAc,MAMV,Q,gBCpBNa,EAAM,+CAUG,EARG,WACd,OAAOC,IAAMC,IAAIF,EAAM,YAOZ,EAJG,SAAAG,GACd,OAAOF,IAAMG,KAAKJ,EAAM,UAAWG,IC0CxBE,EA9CH,WAAO,IAAD,EACYtB,mBAAS,IADrB,mBACTuB,EADS,KACDC,EADC,KAEhBC,qBAAU,WACRC,IAEGC,MAAK,SAAAC,GACJhB,QAAQC,IAAIe,EAASC,MACrBL,EAAUI,EAASC,WAEtB,IAsBH,OACE,6BACE,kBAAC,EAAD,CACE/B,MAAQ,qBAvBZyB,EAAOO,KAAI,SAAAC,GAAK,OACd,wBAAIC,IAAKD,EAAME,GAAIpC,UAAY,+BAC7B,qCADF,IACiBkC,EAAMA,MADvB,KAC+B,oCAD/B,IAC6CA,EAAMG,SAwBnD,kBAAC,EAAD,CACEpB,UAAY,WACZN,UAAY,YACZQ,UAvBsB,SAACkB,EAAMH,GAE/BnB,QAAQC,IAAI,WAAaqB,EAAOH,GAKhCL,EAJiB,CACfQ,KAAMA,EACNH,MAAOA,IAGNJ,MAAK,SAAAE,GACJjB,QAAQC,IAAIgB,GACZL,EAAUD,EAAOY,OAAON,EAAKA,MAAMO,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEP,MAAQM,EAAEN,aAC5DQ,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,WC7BlCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.321d4cc3.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from '../styles/styles.css'\r\nconst ScoreBoard = props => {\r\n    return(\r\n        <div className = \"scoreboard-headline-wrapper\">\r\n            <div className = \"scoreboard-text\">{props.title}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ScoreBoard","import React, { useState } from \"react\"\r\nimport styles from '../styles/styles.css'\r\nconst TextInput = props => {\r\n    const [textInputValue, setTextInputValue] = useState('')\r\n    const [scoreValue, setScoreValue] = useState('')\r\n    const setTextInputValueHandler = event => {\r\n        setTextInputValue(event.target.value)\r\n        console.log(textInputValue)\r\n    }\r\n    const setScoreValueHandler = event => {\r\n        setScoreValue(event.target.value)\r\n        console.log(scoreValue)\r\n    }\r\n    const handleAdd = () => {\r\n        props.handleAdd(textInputValue, scoreValue)\r\n        setTextInputValue('');\r\n        setScoreValue('')\r\n    }\r\n    return(\r\n        <div className = \"scoreboard-headline-wrapper\">\r\n            <input type=\"text\" value={scoreValue} placeholder={props.scoreText} onChange = {setScoreValueHandler}></input>\r\n            <input type=\"text\" value={textInputValue} placeholder={props.inputText} onChange = {setTextInputValueHandler}></input>\r\n            <button onClick = {handleAdd}>>></button>\r\n        </div>\r\n    )\r\n}\r\nexport default TextInput","import axios from 'axios'\r\n\r\nconst url = \"https://shrouded-chamber-27182.herokuapp.com\"\r\n\r\nconst getScores = () => {\r\n    return axios.get(url + \"/scores\")\r\n}\r\n\r\nconst saveScore = scoreToBeSaved => {\r\n    return axios.post(url + \"/scores\", scoreToBeSaved)\r\n}\r\n\r\nexport default {\r\n    getScores:getScores,\r\n    saveScore:saveScore\r\n}","import React, {useState, useEffect} from 'react';\nimport ScoreBoard from './components/ScoreBoard';\nimport TextInput from './components/TextInput';\nimport ScoreService from './services/ScoreService';\nimport styles from './styles/styles.css'\nconst App = () => {\n  const [scores, setScores] = useState([])\n  useEffect(() => {\n    ScoreService\n      .getScores()\n      .then(response => {\n        console.log(response.data)\n        setScores(response.data)\n      })\n  }, [])\n  const showAllScores = () =>\n    scores.map(score => \n      <ul key={score.id} className = \"scoreboard-headline-wrapper\">\n        <b>Score:</b> {score.score}, <b>Name:</b> {score.name}\n      </ul>\n    )\n\n    const handleScoreAdding = (name, score) => {\n      //ScoreService.getScores()\n      console.log(\"adding: \" + name + score)\n      const newScore = {\n        name: name,\n        score: score\n      }\n      ScoreService.saveScore(newScore)\n        .then(data => {\n          console.log(data)\n          setScores(scores.concat(data.data).sort((a,b) => b.score - a.score))\n        }).catch(e => console.log(e))\n    }\n  \n  return(\n    <div>\n      <ScoreBoard \n        title = \"Scoreboard table\"\n      />\n      {showAllScores()}\n      <TextInput \n        inputText = \"Add name\"\n        scoreText = \"Add score\"\n        handleAdd = {handleScoreAdding}\n      />\n\n    </div>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}