{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Mikae\\\\Desktop\\\\scoreboard-table\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ScoreBoard from'./components/ScoreBoard';import TextInput from'./components/TextInput';import ScoreService from'./services/ScoreService';import styles from'./styles/styles.css';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),scores=_useState2[0],setScores=_useState2[1];useEffect(function(){ScoreService.getScores().then(function(response){console.log(response.data);setScores(response.data);});},[]);var showAllScores=function showAllScores(){return scores.map(function(score){return React.createElement(\"ul\",{key:score.id,className:\"scoreboard-headline-wrapper\"},React.createElement(\"b\",null,\"Score:\"),\" \",score.score,\", \",React.createElement(\"b\",null,\"Name:\"),\" \",score.name);});};var handleScoreAdding=function handleScoreAdding(name,score){//ScoreService.getScores()\nconsole.log(\"adding: \"+name+score);var newScore={name:name,score:score};ScoreService.saveScore(newScore).then(function(data){console.log(data);setScores(scores.concat(data.data).sort(function(a,b){return b.score-a.score;}));}).catch(function(e){return console.log(e);});};return React.createElement(\"div\",null,React.createElement(ScoreBoard,{title:\"Scoreboard table\"}),showAllScores(),React.createElement(TextInput,{inputText:\"Add name\",scoreText:\"Add score\",handleAdd:handleScoreAdding}));};export default App;","map":{"version":3,"sources":["C:/Users/Mikae/Desktop/scoreboard-table/frontend/src/App.js"],"names":["React","useState","useEffect","ScoreBoard","TextInput","ScoreService","styles","App","scores","setScores","getScores","then","response","console","log","data","showAllScores","map","score","id","name","handleScoreAdding","newScore","saveScore","concat","sort","a","b","catch","e"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACYN,QAAQ,CAAC,EAAD,CADpB,wCACTO,MADS,eACDC,SADC,eAEhBP,SAAS,CAAC,UAAM,CACdG,YAAY,CACTK,SADH,GAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACAN,SAAS,CAACG,QAAQ,CAACG,IAAV,CAAT,CACD,CALH,EAMD,CAPQ,CAON,EAPM,CAAT,CAQA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SACpBR,CAAAA,MAAM,CAACS,GAAP,CAAW,SAAAC,KAAK,QACd,2BAAI,GAAG,CAAEA,KAAK,CAACC,EAAf,CAAmB,SAAS,CAAG,6BAA/B,EACE,sCADF,KACiBD,KAAK,CAACA,KADvB,MAC+B,qCAD/B,KAC6CA,KAAK,CAACE,IADnD,CADc,EAAhB,CADoB,EAAtB,CAOE,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACD,IAAD,CAAOF,KAAP,CAAiB,CACzC;AACAL,OAAO,CAACC,GAAR,CAAY,WAAaM,IAAb,CAAoBF,KAAhC,EACA,GAAMI,CAAAA,QAAQ,CAAG,CACfF,IAAI,CAAEA,IADS,CAEfF,KAAK,CAAEA,KAFQ,CAAjB,CAIAb,YAAY,CAACkB,SAAb,CAAuBD,QAAvB,EACGX,IADH,CACQ,SAAAI,IAAI,CAAI,CACZF,OAAO,CAACC,GAAR,CAAYC,IAAZ,EACAN,SAAS,CAACD,MAAM,CAACgB,MAAP,CAAcT,IAAI,CAACA,IAAnB,EAAyBU,IAAzB,CAA8B,SAACC,CAAD,CAAGC,CAAH,QAASA,CAAAA,CAAC,CAACT,KAAF,CAAUQ,CAAC,CAACR,KAArB,EAA9B,CAAD,CAAT,CACD,CAJH,EAIKU,KAJL,CAIW,SAAAC,CAAC,QAAIhB,CAAAA,OAAO,CAACC,GAAR,CAAYe,CAAZ,CAAJ,EAJZ,EAKD,CAZD,CAcF,MACE,gCACE,oBAAC,UAAD,EACE,KAAK,CAAG,kBADV,EADF,CAIGb,aAAa,EAJhB,CAKE,oBAAC,SAAD,EACE,SAAS,CAAG,UADd,CAEE,SAAS,CAAG,WAFd,CAGE,SAAS,CAAIK,iBAHf,EALF,CADF,CAcD,CA7CD,CA8CA,cAAed,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ScoreBoard from './components/ScoreBoard';\nimport TextInput from './components/TextInput';\nimport ScoreService from './services/ScoreService';\nimport styles from './styles/styles.css'\nconst App = () => {\n  const [scores, setScores] = useState([])\n  useEffect(() => {\n    ScoreService\n      .getScores()\n      .then(response => {\n        console.log(response.data)\n        setScores(response.data)\n      })\n  }, [])\n  const showAllScores = () =>\n    scores.map(score => \n      <ul key={score.id} className = \"scoreboard-headline-wrapper\">\n        <b>Score:</b> {score.score}, <b>Name:</b> {score.name}\n      </ul>\n    )\n\n    const handleScoreAdding = (name, score) => {\n      //ScoreService.getScores()\n      console.log(\"adding: \" + name + score)\n      const newScore = {\n        name: name,\n        score: score\n      }\n      ScoreService.saveScore(newScore)\n        .then(data => {\n          console.log(data)\n          setScores(scores.concat(data.data).sort((a,b) => b.score - a.score))\n        }).catch(e => console.log(e))\n    }\n  \n  return(\n    <div>\n      <ScoreBoard \n        title = \"Scoreboard table\"\n      />\n      {showAllScores()}\n      <TextInput \n        inputText = \"Add name\"\n        scoreText = \"Add score\"\n        handleAdd = {handleScoreAdding}\n      />\n\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}