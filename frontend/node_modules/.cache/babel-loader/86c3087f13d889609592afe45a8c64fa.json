{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mikae\\\\Desktop\\\\scoreboard-table\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScoreBoard from './components/ScoreBoard';\nimport TextInput from './components/TextInput';\nimport ScoreService from './services/ScoreService';\nimport styles from './styles/styles.css';\n\nconst App = () => {\n  const [scores, setScores] = useState([]);\n  useEffect(() => {\n    ScoreService.getScores().then(response => {\n      console.log(response.data);\n      setScores(response.data);\n    });\n  }, []);\n\n  const showAllScores = () => scores.map(score => React.createElement(\"ul\", {\n    className: \"scoreboard-headline-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Score:\"), \" \", score.score, \", \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Name:\"), \" \", score.name));\n\n  const handleScoreAdding = (name, score) => {\n    //ScoreService.getScores()\n    console.log(\"adding: \" + name + score);\n    const newScore = {\n      name: name,\n      score: score\n    };\n    ScoreService.saveScore(newScore).then(() => {\n      this.showAllScores();\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ScoreBoard, {\n    title: \"Scoreboard table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), showAllScores(), React.createElement(TextInput, {\n    inputText: \"Add name\",\n    scoreText: \"Add score\",\n    handleAdd: handleScoreAdding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mikae/Desktop/scoreboard-table/frontend/src/App.js"],"names":["React","useState","useEffect","ScoreBoard","TextInput","ScoreService","styles","App","scores","setScores","getScores","then","response","console","log","data","showAllScores","map","score","name","handleScoreAdding","newScore","saveScore"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CACTK,SADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,MAAAA,SAAS,CAACG,QAAQ,CAACG,IAAV,CAAT;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAMC,aAAa,GAAG,MACpBR,MAAM,CAACS,GAAP,CAAWC,KAAK,IACd;AAAI,IAAA,SAAS,EAAG,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACiBA,KAAK,CAACA,KADvB,QAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD/B,OAC6CA,KAAK,CAACC,IADnD,CADF,CADF;;AAME,QAAMC,iBAAiB,GAAG,CAACD,IAAD,EAAOD,KAAP,KAAiB;AACzC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaK,IAAb,GAAoBD,KAAhC;AACA,UAAMG,QAAQ,GAAG;AACfF,MAAAA,IAAI,EAAEA,IADS;AAEfD,MAAAA,KAAK,EAAEA;AAFQ,KAAjB;AAIAb,IAAAA,YAAY,CAACiB,SAAb,CAAuBD,QAAvB,EACGV,IADH,CACQ,MAAM;AACV,WAAKK,aAAL;AACD,KAHH;AAID,GAXD;;AAaF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAG,kBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIGA,aAAa,EAJhB,EAKE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAG,UADd;AAEE,IAAA,SAAS,EAAG,WAFd;AAGE,IAAA,SAAS,EAAII,iBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAcD,CA3CD;;AA4CA,eAAeb,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ScoreBoard from './components/ScoreBoard';\nimport TextInput from './components/TextInput';\nimport ScoreService from './services/ScoreService';\nimport styles from './styles/styles.css'\nconst App = () => {\n  const [scores, setScores] = useState([])\n  useEffect(() => {\n    ScoreService\n      .getScores()\n      .then(response => {\n        console.log(response.data)\n        setScores(response.data)\n      })\n  }, [])\n  const showAllScores = () => \n    scores.map(score => \n      <ul className = \"scoreboard-headline-wrapper\">\n        <b>Score:</b> {score.score}, <b>Name:</b> {score.name}\n      </ul>\n    )\n    const handleScoreAdding = (name, score) => {\n      //ScoreService.getScores()\n      console.log(\"adding: \" + name + score)\n      const newScore = {\n        name: name,\n        score: score\n      }\n      ScoreService.saveScore(newScore)\n        .then(() => {\n          this.showAllScores()\n        })\n    }\n  \n  return(\n    <div>\n      <ScoreBoard \n        title = \"Scoreboard table\"\n      />\n      {showAllScores()}\n      <TextInput \n        inputText = \"Add name\"\n        scoreText = \"Add score\"\n        handleAdd = {handleScoreAdding}\n      />\n\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}